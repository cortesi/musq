[workspace]
members = [
    ".",
    "sqlx-core",
    "sqlx-macros",
    "sqlx-macros-core",
    "sqlx-test",
#    "sqlx-bench",
    "sqlx-sqlite",
    "examples/sqlite/todos",
]

[workspace.package]
version = "0.7.1"
license = "MIT"
edition = "2021"
repository = "https://github.com/cortesi/musqlite"
keywords = ["database", "async", "sqlite"]
categories = ["database", "asynchronous"]
authors = [
    "Aldo Cortesi <aldo@corte.si>"
]

[package]
name = "sqlx"
readme = "README.md"
documentation = "https://docs.rs/sqlx"
description = "A SQLite library"
version.workspace = true
license.workspace = true
edition.workspace = true
authors.workspace = true
repository.workspace = true

[package.metadata.docs.rs]
features = ["all-databases", "_unstable-all-types"]
rustdoc-args = ["--cfg", "docsrs"]

[features]
default = ["macros", "json", "runtime-tokio", "sqlite"]
macros = ["sqlx-macros"]

# intended mainly for CI and docs
all-databases = ["sqlite", "any"]
_unstable-all-types = [
    "bigdecimal",
    "rust_decimal",
    "json",
    "time",
    "chrono",
    "ipnetwork",
    "mac_address",
    "uuid",
    "bit-vec",
]

runtime-tokio = ["sqlx-core/_rt-tokio", "sqlx-macros?/_rt-tokio"]

# database
any = ["sqlx-core/any", "sqlx-sqlite?/any"]
sqlite = ["sqlx-sqlite", "sqlx-macros?/sqlite"]

# types
json = ["sqlx-macros?/json", "sqlx-sqlite?/json"]
bigdecimal = ["sqlx-core/bigdecimal", "sqlx-macros?/bigdecimal"]
bit-vec = ["sqlx-core/bit-vec", "sqlx-macros?/bit-vec"]
chrono = ["sqlx-core/chrono", "sqlx-macros?/chrono", "sqlx-sqlite?/chrono"]
ipnetwork = ["sqlx-core/ipnetwork", "sqlx-macros?/ipnetwork"]
mac_address = ["sqlx-core/mac_address", "sqlx-macros?/mac_address"]
rust_decimal = ["sqlx-core/rust_decimal", "sqlx-macros?/rust_decimal"]
time = ["sqlx-core/time", "sqlx-macros?/time", "sqlx-sqlite?/time"]
uuid = ["sqlx-core/uuid", "sqlx-macros?/uuid", "sqlx-sqlite?/uuid"]
regexp = ["sqlx-sqlite?/regexp"]

[workspace.dependencies]
# Core Crates
sqlx-core = { version = "=0.7.1", path = "sqlx-core" }
sqlx-macros-core = { version = "=0.7.1", path = "sqlx-macros-core" }
sqlx-macros = { version = "=0.7.1", path = "sqlx-macros" }

# Driver crates
sqlx-sqlite = { version = "=0.7.1", path = "sqlx-sqlite" }

# Facade crate (for reference from sqlx-cli)
sqlx = { version = "=0.7.1", path = ".", default-features = false }

# Common type integrations shared by multiple driver crates.
# These are optional unless enabled in a workspace crate.
bigdecimal = "0.3.0"
bit-vec = "0.6.3"
chrono = { version = "0.4.22", default-features = false }
ipnetwork = "0.20.0"
mac_address = "1.1.5"
rust_decimal = "1.26.1"
time = { version = "0.3.14", features = ["formatting", "parsing", "macros"] }
uuid = "1.1.2"

# Common utility crates
dotenvy = { version = "0.15.0", default-features = false }

[workspace.dependencies.tokio]
version = "1"
features = ["time", "net", "sync", "fs", "io-util", "rt"]
default-features = false

[dependencies]
sqlx-core = { workspace = true }
sqlx-macros = { workspace = true, optional = true }
sqlx-sqlite = { workspace = true, optional = true }

[dev-dependencies]
anyhow = "1.0.52"
time_ = { version = "0.3.2", package = "time" }
futures = "0.3.19"
env_logger = "0.9.0"
tokio = { version = "1.15.0", features = ["full"] }
dotenvy = "0.15.0"
trybuild = "1.0.53"
sqlx-test = { path = "./sqlx-test" }
paste = "1.0.6"
serde = { version = "1.0.132", features = ["derive"] }
serde_json = "1.0.73"
url = "2.2.2"
rand = "0.8.4"
rand_xoshiro = "0.6.0"
hex = "0.4.3"
tempdir = "0.3.7"
criterion = {version = "0.4", features = ["async_tokio"]}

# Needed to test SQLCipher
libsqlite3-sys = { version = "0.26", features = ["bundled-sqlcipher"] }

[[test]]
name = "sqlite"
path = "tests/sqlite/sqlite.rs"
required-features = ["sqlite"]

[[test]]
name = "sqlite-types"
path = "tests/sqlite/types.rs"
required-features = ["sqlite"]

[[test]]
name = "sqlite-describe"
path = "tests/sqlite/describe.rs"
required-features = ["sqlite"]

[[test]]
name = "sqlite-macros"
path = "tests/sqlite/macros.rs"
required-features = ["sqlite", "macros"]

[[test]]
name = "sqlite-derives"
path = "tests/sqlite/derives.rs"
required-features = ["sqlite", "macros"]

[[test]]
name = "sqlite-error"
path = "tests/sqlite/error.rs"
required-features = ["sqlite"]

[[test]]
name = "sqlite-sqlcipher"
path = "tests/sqlite/sqlcipher.rs"
required-features = ["sqlite"]

[[test]]
name = "sqlite-test-attr"
path = "tests/sqlite/test-attr.rs"
required-features = ["sqlite", "macros"]


[[bench]]
name = "sqlite-describe"
path = "benches/sqlite/describe.rs"
harness = false
required-features = ["sqlite"]

