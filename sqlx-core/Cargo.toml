[package]
name = "sqlx-core"
description = "Core of SQLx, the rust SQL toolkit. Not intended to be used directly."
version.workspace = true
license.workspace = true
edition.workspace = true
authors.workspace = true
repository.workspace = true

[features]
default = []
any = []
json = ["serde", "serde_json"]
# for conditional compilation
_rt-tokio = ["tokio"]

[dependencies]
# Runtimes
tokio = { workspace = true, optional = true }

# Type Integrations
bit-vec = { workspace = true, optional = true }
bigdecimal = { workspace = true, optional = true }
rust_decimal = { workspace = true, optional = true }
time = { workspace = true, optional = true }
ipnetwork = { workspace = true, optional = true }
mac_address = { workspace = true, optional = true }
uuid = { workspace = true, optional = true }

ahash = "0.8"

bytes = "1.1.0"
chrono = { version = "0.4.19", default-features = false, features = [
    "clock",
], optional = true }
crossbeam-queue = "0.3.2"
either = { version = "1.6.1", features = ["serde"] }
futures-channel = { version = "0.3.19", default-features = false, features = [
    "sink",
    "alloc",
    "std",
] }
futures-core = { version = "0.3.19", default-features = false }
futures-io = "0.3.24"
futures-intrusive = "0.5.0"
futures-util = { version = "0.3.19", default-features = false, features = [
    "alloc",
    "sink",
    "io",
] }
log = { version = "0.4.14", default-features = false }
memchr = { version = "2.4.1", default-features = false }
percent-encoding = "2.1.0"
serde = { version = "1.0.132", features = ["derive", "rc"], optional = true }
serde_json = { version = "1.0.73", features = ["raw_value"], optional = true }
sqlformat = "0.2.0"
thiserror = "1.0.30"
tracing = { version = "0.1.37", features = ["log"] }
smallvec = "1.7.0"
url = { version = "2.2.2", default-features = false }
bstr = { version = "1.0", default-features = false, features = [
    "std",
], optional = true }
hashlink = "0.8.0"
indexmap = "2.0"
event-listener = "2.5.2"


[dev-dependencies]
sqlx = { workspace = true, features = ["sqlite", "macros"] }
tokio = { version = "1", features = ["rt"] }
